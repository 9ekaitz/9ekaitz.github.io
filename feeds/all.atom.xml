<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>9ekaitz</title><link href="https://www.9ekaitz.eus/" rel="alternate"></link><link href="https://www.9ekaitz.eus/feeds/all.atom.xml" rel="self"></link><id>https://www.9ekaitz.eus/</id><updated>2022-06-05T11:00:00+02:00</updated><entry><title>Personal web site</title><link href="https://www.9ekaitz.eus/webpage.html" rel="alternate"></link><published>2022-06-05T11:00:00+02:00</published><updated>2022-06-05T11:00:00+02:00</updated><author><name>9ekaitz</name></author><id>tag:www.9ekaitz.eus,2022-06-05:/webpage.html</id><summary type="html">&lt;p&gt;A place to publish articles and info about my projects&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have created this website to show the projects I do in my free time and in class. For now, there are only a few projects, but I would like to write a guide or article to publish here. I also plan to put information about myself, for example, the distro I use or what programs I use daily. I would also like this website to function as a portfolio, so I will be adding more content over time.&lt;/p&gt;
&lt;p&gt;On the technical side, the website is created using the Pelican tool. Pelican is a static site generator, which means that it offers the possibility to generate static sites. All projects and articles are written as markdown files, and Pelican takes care of creating the HTML structure. To determine that structure, you can use different templates. To give it a more personal style and according to the structure I wanted, I created my own template. Although viewing it from a computer greatly improves the user experience, it is designed with a mobile first approach and is completely adaptable to any screen.&lt;/p&gt;
&lt;p&gt;Pelican uses the Jinja2 template program, and I have also used the Jinja i18n and "Pelican i18n subsites" extensions to offer the site in two languages.&lt;/p&gt;</content><category term="Project"></category><category term="personal-site"></category></entry><entry><title>Web orri pertsonala</title><link href="https://www.9ekaitz.eus/eu/webpage.html" rel="alternate"></link><published>2022-06-05T11:00:00+02:00</published><updated>2022-06-05T11:00:00+02:00</updated><author><name>9ekaitz</name></author><id>tag:www.9ekaitz.eus,2022-06-05:/eu/webpage.html</id><summary type="html">&lt;p&gt;Idatzitako artikluak edo proiektuei buruz informazioa argitaratzeko&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nire denbora librean egiten ditudan proeiktuak edo klaseko proiektuak nonbaiten erakutsi ahal izateko web orri hau sortu dut. Momentuz proiektu batzuk daude bakarrik, baina artikuloren bat edo gidaren bat idaztea gustatuko zitzaidan. Nire buruari buruzko informazioa jartzea ere pentsatuta daukat, adibidez zer distro erabiltzen dudan edo zer programak erabiltzen ditudan normalean. Web orri hau protafolio funtzioa izatea ere gustatuko zitzaidan, berez eduki gehiago gehitzen joango naiz denborarekin.&lt;/p&gt;
&lt;p&gt;Atal teknikoari dagokionez web orria Pelican erreminta erabiliz eginda dago. Pelican &lt;em&gt;static site generator&lt;/em&gt; bat da, hau da, web orri estatikoak sortzeko aukera ematen du. Proiektu eta artikulu guztiak Markdown fitxategi bezela idazten dira eta Pelican-ek HTML egitura sortzeaz arduratzen da. Egitura hori zehazteko txantiloi ezberdinak erabili daitezke, estilo pertsonal bat emateko eta nahi nuen egiturara hobeto moldatzeko nire txantiloi propioa sortu dut. Nahiz eta ordenagailu batetik ikusteak esperientzia asko hobetzen du , &lt;em&gt;mobile first&lt;/em&gt; ikuspuntutik diseinatuta dago eta mugikor batera guztiz moldatuta dago.&lt;/p&gt;
&lt;p&gt;Pelican Jinja2 txantiloietarako programa erabiltzen du, eta hortaz aparte &lt;em&gt;Jinja i18n&lt;/em&gt; eta &lt;em&gt;Pelican i18n subsites&lt;/em&gt; luzapenetaz baliatu naiz web orria bi hizkuntzetan eskaintzeko.&lt;/p&gt;</content><category term="Project"></category><category term="personal-site"></category></entry><entry><title>Solaris</title><link href="https://www.9ekaitz.eus/solaris.html" rel="alternate"></link><published>2022-04-25T18:00:00+02:00</published><updated>2022-04-25T18:00:00+02:00</updated><author><name>9ekaitz</name></author><id>tag:www.9ekaitz.eus,2022-04-25:/solaris.html</id><summary type="html">&lt;p&gt;An online platform for the purchase and managment of solar panels&lt;/p&gt;</summary><content type="html">&lt;p&gt;Solaris is an online platform for buying and managing solar panels. It is intended for businesses that want to sell their product while also providing additional services such as installation, maintenance, or monitoring. It's deployed as a web app and it has been designed with a mobile first approach to reach a wider audience.&lt;/p&gt;
&lt;p&gt;The project started as an idea to promote the use and adoption of renewable energy, specifically solar energy. From there, we decided to develop an online shop to purchase the products, a management area to easily make changes to the shop and the employees' accounts, a section with guidance for the employees that install the panels, and a dashboard for the end user to control and monitor their panels.&lt;/p&gt;
&lt;p&gt;We started by designing the UI and deciding how the content was to be organized. In order to create a design that meets the needs of our users, we analyzed the user requirements and performed some user testing with the first implementations of the design. After that, the design was changed to reflect the possible improvements observed during the testing.&lt;/p&gt;
&lt;p&gt;To ensure the code quality and optimize the productivity during development, a CI/CD server was deployed using Jenkins and Sonarqube. For the code version control, git was used with a remote repository on Github. Following the github flow branching strategy, we created a branch for each feature and opened a pull request when it was completed and ready to merge.&lt;/p&gt;
&lt;h4&gt;Web&lt;/h4&gt;
&lt;p&gt;The web app is developed using Spring, a java framework for web development. We take advantage of the MVC and thymeleaf integration to provide a dynamic site with server side template rendering. The data for the webpage and all the users is stored in a PostgreSQL database, the tables are matched in spring with JPA entitys.&lt;/p&gt;</content><category term="Project"></category><category term="pbl"></category><category term="team-work"></category></entry><entry><title>Solaris</title><link href="https://www.9ekaitz.eus/eu/solaris.html" rel="alternate"></link><published>2022-04-25T18:00:00+02:00</published><updated>2022-04-25T18:00:00+02:00</updated><author><name>9ekaitz</name></author><id>tag:www.9ekaitz.eus,2022-04-25:/eu/solaris.html</id><summary type="html">&lt;p&gt;An online platform for the purchase and managment of solar panels&lt;/p&gt;</summary><content type="html">&lt;p&gt;Solaris eguzki panelak erosi eta kudeatzeko plataforma online bat da. Beren produktuak saltzeaz gain gainontzeko zerbitzu batzuk hala nola, instalazioa, mantenketa edo monitorizazioa eskaini nahi duten enpresei zuzenduta dago. Web aplikazio gisa zabalduta dago, eta &lt;em&gt;mobile first&lt;/em&gt; ikuspuntu batetik diseinatuta izan da publiko zabalago batera iritsi ahal izateko.&lt;/p&gt;
&lt;p&gt;Proiektua energia berriztagarriak eta konkretuki eguzki energia bultzatzeko ideiarekin hasi zen. Hortik hasita hurrengo ezaugarriak garatzea erabaki zen: Online denda bat produktuak erosteko, kudetze eremu bat dendan eta langileen kontuetan aldaketak errezago egiteko, panelak instalatzeaz arduratzen diren langileetarako laguntza sekzio bat, eta erabiltzaileentzako panel interaktibo bat bertatik beraien panelak kontrolatu eta monitorizatu ahal izateko.&lt;/p&gt;
&lt;p&gt;Erabiltzaileen interfazea (UI) diseinatzen eta edukia nola egon behar zen orgainizatuta erabakitzen hasi ginen. Gure erabiltzileen beharrak betetzen dituen diseinu bat sortzeko erabiltzaileen beharrrak analisatu genituen eta erabiltzaile probak egin genituen diseinuaren lehenengo implementazioak erabiliz. Behin hori eginda, diseinua aldatu egin zen proben zehar ikusitako obekuntza posibleak implementatzeko.&lt;/p&gt;
&lt;p&gt;Kodigoaren kalitatea bermatzeko eta garatzerako orduan produktibitatea optimizatzeko CI/CD zerbitzari bat sortu genuen Jenkins eta Sonarqube erabiliz. Kodearen bertsio kudeaketarako Git erreminta erabili genuen, Github-eko urruneko errepositorio batekin. Github flow adar sorkuntza estrategia jarraitzea erabaki zen, ezaugarri edo funtzionalitate bakoitzerako adar berri bat sortzen, eta &lt;em&gt;pull request&lt;/em&gt; bat sortuz adarra bukatuta zegoenenan eta kodea elkartzeko prest zegoenean.&lt;/p&gt;
&lt;h4&gt;Web&lt;/h4&gt;
&lt;p&gt;The web app is developed using Spring, a java framework for web development. We take advantage of the MVC and thymeleaf integration to provide a dynamic site with server side template rendering. The data for the webpage and all the users is stored in a PostgreSQL database, the tables are matched in spring with JPA entitys.&lt;/p&gt;</content><category term="Project"></category><category term="pbl"></category><category term="team-work"></category></entry><entry><title>The Cave</title><link href="https://www.9ekaitz.eus/the-cave.html" rel="alternate"></link><published>2022-02-15T18:00:00+01:00</published><updated>2022-02-15T18:00:00+01:00</updated><author><name>9ekaitz</name></author><id>tag:www.9ekaitz.eus,2022-02-15:/the-cave.html</id><summary type="html">&lt;p&gt;A retro style platform game developed using C and the SDL library&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Cave is a small platform game developed in C using the Direct Media Layer library. It has a retro-like style and is composed of 5 playable levels in which the player has to jump through the platforms and kill or avoid the different enemies in order to get to the next level. The player can use w, a, s, d and space to control the character movement, and k to attack. In each level, there can also be some dangers such as spikes that will make the gameplay more challenging.&lt;/p&gt;
&lt;p&gt;When the game is launched for the first time a menu appears on the screen, there are some options such as Play, Controls and Credits. Controls show all the keys and functionalities that can be used during the game. If the user clicks on play, a short scene will appear after which the game will start from the first level.&lt;/p&gt;
&lt;p&gt;This game is the first project we developed in the Computer Engineering degree. It's written using the C language, was developed in one month and is the first real program we coded in C apart from the learning exercises. It also was the first project in which we used a code version control system (Git) and a remote repository for code sharing (Github).&lt;/p&gt;
&lt;p&gt;The focus of the project was to develop a graphical application using SDL in C, we decided to create a game because in the team we all enjoy playing them. The game also has sounds and background music thanks to the SDL_mixer library.&lt;/p&gt;
&lt;p&gt;In the final week of the development, we decided to challenge ourselves and try to implement some multiplayer functionality, as the application was already in an advanced stage and implementing multiplayer in the base game would require a lot of changes and re-thinking, we decided to create a mini-game with the multiplayer in it. In honor of one of the first and more popular video games, Pong, we decided to create a Pong version with online multiplayer. The implementation of the multiplayer was done using the SDL_net library and required one of the players to act as the server, and the other one to connect to it. The mini-game was included in the final product as an Easter Egg. When pressing any of the "Pong" characters' keys a sound of the game was emitted, if all the keys were introduced in the correct order the mini-game launches prompting the user to choose between the local multiplayer and the online one.&lt;/p&gt;</content><category term="Project"></category><category term="pbl"></category><category term="team-work"></category></entry><entry><title>The Cave</title><link href="https://www.9ekaitz.eus/eu/the-cave.html" rel="alternate"></link><published>2022-02-15T18:00:00+01:00</published><updated>2022-02-15T18:00:00+01:00</updated><author><name>9ekaitz</name></author><id>tag:www.9ekaitz.eus,2022-02-15:/eu/the-cave.html</id><summary type="html">&lt;p&gt;Retro itzuradun C lengoian eta SDL liburutegia erabilita garatutako jokoa.&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Cave plataformen generoko joko txiki bat da, C-n garatuata Direct Media Layer liburutegia erabiliz. Retro iztura dauka eta 5 pantaila ezberdinez osatuatuta dago, jokalariak plataforma ezberdinen artean salto egin beharko du bertan dauden etsaiak gainditu edo saihestuz hurrengo pantailara iritsi ahal izateko.
Jokalariak w, a, s, d, eta espazio teklak ibili ahalko ditu pertsonaia muguitzeko, eta k tekla erasotzeko. Gainera pantaila bakoitzean beste arriuzku batzuk egon daitezke, arantzak adibidez, partida erronka handituz.&lt;/p&gt;
&lt;p&gt;Jokoa irekitzean menu pantaila bat agertzen da jokuan dauden aukera ezberdiak erakutsiz: Jolastu, Kontrolak eta Kredituak. Kontrolak sakatuz gero jokuan erabili daiteken teklak eta beraien funtzioa azaltzen da. Jolastu sakatzean zinematika txiki bat agertzen da eta jokua lehenengo pantailatik hasten da.&lt;/p&gt;
&lt;p&gt;Joko hau Ingenieritza Informatikako graduan garatutako lehen priektua da. C lengoaia erabiliz idatzita dago, hilabete batean garatua izan zen eta hasieran ikasteko egindako ariketaz aparte C-n programatu genuen benetazko programa izan zen. Horrez gain kodearen bertsioa kudeatzeko sistema (Git) eta kodea partekatzeko urrutiko biltegi bat (Github) erabili genuen lehenengo aldia ere izan zen. &lt;/p&gt;
&lt;p&gt;Proeiktuaren helburua nagusia C-n SDL liburutegia erabiliz apliakzio grafiko bat garatzea zen, taldeko guztiok bideojoko zaleak garenez, bideojoko bat egitea erabaki genuen. Jokoak soinu ezberdinak eta soinu-bandak ere dauzka, SLD_mixer liburutegiari esker inplementatuak.&lt;/p&gt;
&lt;p&gt;Garapenaren azkenengo astean, gure buruak desafiatzea erabaki genuen multi-jokalari funtzioanlitate garatuz eta inplementatuz. Baina aplikazioa fase nahiko aurreratu batean zegoenez multi-jokolaria inplementatzeak kode aladaketa eta ber-egiturketa handia susposatuko zuen, hortaz mini-joko berri bat sortzea erabaki genuen eta bertan multi-jokolaria jartzea.&lt;/p&gt;
&lt;p&gt;Bideojoko ezagun eta lehenengoetako baten omenez, Pong, internet bidez beste jokalari batekin jolastea ahal bidetzen zuen bertsioa sortzea erabaki genuen. Multi-jokalariaren inplementazioa SDL_net liburutegia erabiliz egin zen, eta jokalari batek zerbiztari lana eta bestea horra konektatzen funtzionatzen zuen. Minijokoa &lt;em&gt;easter egg&lt;/em&gt; bezala sartu zen produktu finalean. "Pong" hitza osatzen duten letren teklaren bat sakatzean Pong jokoaren soinu bat entzuten zen, tekla guztiak orden zuzenan sakatuz gero minjokoa hasten zen jokolariari ea joko lokala edo internet bidezkoa nahi zuen galdetuz.&lt;/p&gt;</content><category term="Project"></category><category term="pbl"></category><category term="team-work"></category></entry></feed>